version: '3.9'

x-common:
  &common
  build:
    context: .
    dockerfile: Dockerfile
  env_file:
    - .env
  volumes:
    - ./projects/airflow/dags:/opt/airflow/dags
    - ./projects/airflow/logs:/opt/airflow/logs
    - ./projects/airflow/plugins:/opt/airflow/plugins
    - ./projects/dbt:/opt/airflow/dbt
    - /var/run/docker.sock:/var/run/docker.sock

x-depends-on:
  &depends-on
  depends_on:
    postgres:
      condition: service_healthy
    airflow-init:
      condition: service_completed_successfully

services:
  postgres:
    image: postgres
    hostname: postgres
    container_name: postgres
    env_file:
      - .env
    ports:
      - '5431:5432'
    networks:
      - ndsnet
    volumes:
            - ./projects/postgres/docker_postgres_init.sql:/docker-entrypoint-initdb.d/docker_postgres_init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U onestack"]
      interval: 5s
      timeout: 5s
      retries: 5

  metabase:
    container_name: metabase
    depends_on:
      - postgres
    hostname: metabase
    build: metabase/
    volumes:
      - ./conf/metabase:/conf
    ports:
      - 3030:3030
    networks:
      - ndsnet

  scheduler:
    <<: *common
    <<: *depends-on
    container_name: airflow-scheduler
    command: scheduler
    restart: on-failure
    ports:
      - "8793:8793"
    networks:
      - ndsnet

  webserver:
    <<: *common
    <<: *depends-on
    container_name: airflow-webserver
    restart: always
    command: webserver
    ports:
      - "8080:8080"
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:8080/health"]
      interval: 30s
      timeout: 30s
      retries: 5
    networks:
      - ndsnet

  airflow-init:
    <<: *common
    container_name: airflow-init
    entrypoint: /bin/bash
    command:
      - -c
      - |
        exec /entrypoint airflow version
    networks:
      - ndsnet

networks:
  ndsnet:
    driver: bridge
